package main

import "fmt"

/* 函数内部是一个条件判断，也就是根据不同的
 * 条件，会执行不同的流程。条件内部是一个逻辑
 * 运算，逻辑运算在前面介绍过。
 * 不同的输入值，在满足条件的情况下才会执行
 * 响应的代码，代码并不会全部执行。*/
func trans_score (score uint8) (string) {
    var level string

    /* 这里是条件判断，if是关键字，后面跟的是
     * 判断的条件，只有条件满足的情况下才会执行
     * 其内部的代码逻辑，也就是 level = "优"
     * 在条件判断的后面也是跟着一对{}，这个表示
     * 执行体，与函数类似。*/
	if ( score >= 90 ) {
        level = "优"
        
    /* 这个是条件判断的另外一种形式，只能跟在if
     * 后面，在if不满足条件的情况下会执行到这里。
     * 如果if已经满足条件，则会跳过这里。下面的
     * 都是这样。 */
	} else if ( score >= 80 ) {
	    level = "良"

	/* 判断条件不一定非要(),下面示例是没有的情况，
	 * 这一点与C和Java非常不同。 */
	} else if score >= 70 {
		level = "中"

	/* 大家可能注意了，这里上一个判断的结束符}与
	 * 本次判断的开始符{在同一行，这个在Go中是必
	 * 须的，具体原因后续再详述。 */
	} else if score >= 60 {
		level = "及格"
	} else {
		level = "不及格"
	}	

    return level
}

func main() {
    /* 这里是函数的调用 */
    fmt.Println( trans_score(88) )
}


